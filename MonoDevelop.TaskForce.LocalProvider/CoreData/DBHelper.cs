// 
// DBHelper.cs
//  
// Author:
//       Anirudh Sanjeev <anirudh@anirudhsanjeev.org>
// 
// Copyright (c) 2009 Anirudh Sanjeev
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4918
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;

namespace MonoDevelop.TaskForce.LocalProvider.CoreData
{
	
	
	public class DBHelper
	{
		public static SQLiteConnection conn;
		public static bool initialized = false;
		
		public static void CreateTables()
		{
			CheckInitialize();
			SQLiteCommand cmd = new SQLiteCommand(conn);
			cmd.CommandText = "CREATE TABLE Tasks(TaskID integer PRIMARY KEY AUTOINCREMENT , Name varchar (100), Priority integer ,Description varchar (5000), CreateDate datetime, DueDate datetime, Depends integer)" ;
			cmd.ExecuteNonQuery();
			cmd.CommandText = "CREATE TABLE Comments(CommentID integer primary key, TaskId integer, Subject varchar(100), Message varchar(5000), PostDate datetime)";
			cmd.ExecuteNonQuery();
		}
		/// <summary>
		/// Checks if the database is intialized and initializes if it isn't already.
		/// </summary>
		public static void CheckInitialize()
		{
			if(!initialized)
			{
				Initialize();
			}
		}
		
		public static int AddTask(TaskCore input)
		{
			SQLiteCommand cmd;
			cmd.CommandText = "INSERT INTO Tasks VALUES (Name, Priority, Description, CreateDate, DueDate, Depends) VALUES ('{0}', {1}, '{2}', '{3}', '{4}', {5})";
		}
		
		
		public static void Initialize()
		{
			initialized = true;
			conn = new SQLiteConnection();
			conn.ConnectionString = "Data Source=tasks.db;Synchronous=Off";
			try
			{				
				conn.Open();
			}
			catch
			{
				conn.ConnectionString = "Data Source=tasks.db;New=True;Synchronous=Off";
				this.CreateTables();
			}
			
		}
		
	}
}
